parse({"input": [[590, 96, 141, 760, 941, 138, 752, 667, 188, 426], [871, 107, 391, 395, 73, 263, 375, 938, 750, 29], [525, 388, 91, 285, 671, 699, 937, 227, 219, 399], [804, 509, 446, 883, 230, 467, 109, 795, 565, 699], [306, 177, 78, 135, 953, 811, 355, 660, 612, 301], [388, 752, 635, 615, 866, 98, 312, 56, 134, 620], [174, 629, 826, 35, 860, 209, 537, 115, 521, 364], [684, 644, 459, 463, 271, 328, 664, 711, 173, 779], [292, 916, 777, 253, 726, 195, 452, 884, 510, 79], [876, 164, 990, 21, 87, 301, 128, 949, 802, 792]], "steps": [[{"coords": [[0, 5], [1, 5], [2, 5], [3, 5], [4, 5], [5, 5], [6, 5], [7, 5], [8, 5], [9, 5]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [4, 5]}, {"type": "findingNeighbor", "coord": [4, 5]}, {"type": "foundNeighbor", "coord": [4, 4]}, {"startRow": 0, "numRows": 10, "startCol": 0, "type": "subproblem", "numCols": 5}, {"coords": [[0, 2], [1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [9, 2]}, {"type": "findingNeighbor", "coord": [9, 2]}, {"type": "foundPeak", "coord": [9, 2]}], [{"type": "findingNeighbor", "coord": [0, 0]}, {"type": "foundNeighbor", "coord": [1, 0]}, {"type": "findingNeighbor", "coord": [1, 0]}, {"type": "foundPeak", "coord": [1, 0]}], [{"coords": [[5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [5, 9], [0, 5], [1, 5], [2, 5], [3, 5], [4, 5], [5, 5], [6, 5], [7, 5], [8, 5], [9, 5]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [5, 4]}, {"type": "findingNeighbor", "coord": [5, 4]}, {"type": "foundNeighbor", "coord": [4, 4]}, {"type": "bestSeen", "coord": [4, 4]}, {"startRow": 0, "numRows": 5, "startCol": 0, "type": "subproblem", "numCols": 5}, {"coords": [[2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [0, 2], [1, 2], [2, 2], [3, 2], [4, 2]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [2, 4]}, {"type": "findingNeighbor", "coord": [2, 4]}, {"type": "foundPeak", "coord": [2, 4]}], [{"coords": [[5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [5, 9]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [5, 4]}, {"type": "findingNeighbor", "coord": [5, 4]}, {"type": "foundNeighbor", "coord": [4, 4]}, {"type": "bestSeen", "coord": [4, 4]}, {"startRow": 0, "numRows": 5, "startCol": 0, "type": "subproblem", "numCols": 10}, {"coords": [[0, 5], [1, 5], [2, 5], [3, 5], [4, 5]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [4, 5]}, {"type": "findingNeighbor", "coord": [4, 5]}, {"type": "foundNeighbor", "coord": [4, 4]}, {"startRow": 0, "numRows": 5, "startCol": 0, "type": "subproblem", "numCols": 5}, {"coords": [[2, 0], [2, 1], [2, 2], [2, 3], [2, 4]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [2, 4]}, {"type": "findingNeighbor", "coord": [2, 4]}, {"startRow": 3, "numRows": 2, "startCol": 0, "type": "subproblem", "numCols": 5}, {"coords": [[0, 2], [1, 2]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [0, 2]}, {"type": "findingNeighbor", "coord": [0, 2]}, {"type": "foundNeighbor", "coord": [0, 3]}, {"startRow": 3, "numRows": 2, "startCol": 3, "type": "subproblem", "numCols": 2}, {"coords": [[1, 0], [1, 1]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [1, 1]}, {"type": "findingNeighbor", "coord": [1, 1]}, {"type": "foundPeak", "coord": [1, 1]}]]})